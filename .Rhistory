source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
nota_total=0
nota<-as.numeric(readline("Con cuanto la aprobo?"))
nota<-readline("Con cuanto la aprobo?"))
nota<-readline("Con cuanto la aprobo?")
nota_b<-as.numeric(nota)
if(is.na(nota_b)==TRUE){
nota <- as.numeric(readline("Ingreso mal la nota de la materia. Ingrese la nota de la materia aprobada: ")
}
if(is.na(nota_b)){
print("Ingreso mal la nota")
nota<-as.numeric(readline("Ingrese la nota con la que aprobo "))
}
nota_total=0
nota_total<-nota_total+nota
if(is.na(nota_b)==TRUE){
nota <- as.numeric(readline("Ingreso mal la nota de la materia. Ingrese la nota de la materia aprobada: ")
}
if(is.na(nota_b)){
print("Ingreo mal la nota")
nota<-as.numeric(readline("Ingrese la nota con la que aprobo"))
}
nota_total<-nota_total+nota
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
nota<-as.numeric(nota)
nota_total<-nota_total+nota
nota<-as.numeric(nota)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# 3. Defina:
#
x <- 12.3
y <- 12L
class(x)
class(y)
# 4. Indiqué de qué clase son x e y
# 5. Indiqué si son de doble precisión
is.double(x)
is.double(y)
# 6. Imprima por pantalla la frase ("DCAO 2022") sin comillas
print("DCAO 2022",quote=FALSE)
print(paste("DCAO",anio,sep" "),quote=FALSE)
print(paste("DCAO",anio,sep=" "),quote=FALSE)
# 7. Repita el ítem anterior pero en dos pasos:
#   Pida por pantalla el año actual
#   Pegue la palabra "DCAO" y el año ingresado para formar la frase del punto 7
anio <- readline("Ingrese el año actual: ")
# 7. Repita el ítem anterior pero en dos pasos:
#   Pida por pantalla el año actual
#   Pegue la palabra "DCAO" y el año ingresado para formar la frase del punto 7
anio <- readline("Ingrese el año actual: ")
print(paste("DCAO",anio,sep=" "),quote=FALSE)
DNI<-readline("Ingrese su DNI: ")
substr(DNI,nchar(DNI)-3,nchar(DNI))
substr(DNI,nchar(DNI)-2,nchar(DNI))
dni <- substr(DNI,nchar(DNI)-2,nchar(DNI))
fecha_de_nacimiento <- paste(substr(nacimiento,1,2),substr(nacimiento,3,4),substr(nacimiento,5,8),sep = "/")
nacimiento <- as.numeric(readline("Ingrese su fecha de nacimiento(DDMMAAAA): "))
fecha_de_nacimiento <- paste(substr(nacimiento,1,2),substr(nacimiento,3,4),substr(nacimiento,5,8),sep = "/")
apellido <- as.numeric(readline("Ingrese su apellido: "))
apellido <- readline("Ingrese su apellido: ")
source("~/.active-rstudio-document")
print(paste("Su nombre y apellido son:",nombre,apellido, sep = " "), quote=FALSE)
print(paste("Su DNI termina en:",dni,sep = " "),quote = FALSE)
print(paste("Ud. nació el",fecha_de_nacimiento,"entonces su edad es",(substr(nacimiento,5,8))-2022, sep = " "),quote=FALSE)
anio_de_nacimiento <- substr(nacimiento,5,8)
print(paste("Ud. nació el",fecha_de_nacimiento,"entonces su edad es",(as.numeric(substr(nacimiento,5,8))-2022, sep = " "),quote=FALSE)
anio_de_nacimiento <- as.numeric(substr(nacimiento,5,8))
print(paste("Ud. nació el",fecha_de_nacimiento,"entonces su edad es",anio_de_nacimiento-2022, sep = " "),quote=FALSE)
print(paste("Ud. nació el",fecha_de_nacimiento,"entonces su edad es",2022- anio_de_nacimiento, sep = " "),quote=FALSE)
source("~/.active-rstudio-document")
#C
rm(list = ls())
a <- matrix(c(1:30),30)
b <- matrix(c(1:20),,20)
c <- merge(a,b)
class(c)
c <- matrix(,a,b)
c <- matrix(a,b)
c <- matrix(a*b,a,b)
c <- matrix(600,a,b)
c <- matrix(1:600,a,b)
c <- matrix(1:600,a[],b[,])
View(b)
View(a)
c <- a%*%b
View(c)
b <- matrix(c(1:20),1,20)
#D
B <- c[,5]
#E
rm(list = ls())
matrix(1:600,dim(20,30,10),dimnames = i,colnames=j)
matrix(1:600,dim(20,30,10),dimnames = "i",colnames="j")
matrix(1:6000,dim(20,30,10),dimnames = "i",colnames="j")
matrix(1:6000,dim(20,30,10),dimnames = "i")
matrix(1:600,dim(20,30,10),dimnames = "i")
matrix(1:600,dim(c(20,30,10)),dimnames = "i")
matrix(1:600,dim=c(20,30,10),dimnames = "i")
matrix(1:600,20,30,10,dimnames = "i")
matrix(1:600,20,30,10,)
matrix(1:600,20,30,10)
matrix(1:6000,20,30,10)
a <- matrix(1:600,20,30,10)
a <- marray(1:600,20,30,10)
a <- array(1:600,20,30,10)
a <- array(1:600,dim = c(20,30,10))
a
D <- (a%*%b)%*%c
a <- array(1:20,20)
b <- array(1:30,1,30)
a <- array(1:20,dim = c(20,1,1))
b <- array(1:30,dim = c(1,30,1))
c <- array(1:10,dim = c(1,1,10))
D <- (a%*%b)%*%c
z <- array(numeric(600),dim = c(20,30,10))
for (i in 1:20) {
for (j in 1:30) {
for (k in 1:10) {
z[i,j,k] <- i*j*k
}
}
}
z <- array(numeric(600),dim = c(20,30,10))
z <- array(numeric(600),dim = c(20,30,10))
for (i in 1:20) {
for (j in 1:30) {
for (k in 1:10) {
z[i,j,k] <- i*j*k
}
}
}
Z <- array(numeric(600),dim = c(20,30,10))
for (i in 1:20) {
for (j in 1:30) {
for (k in 1:10) {
Z[i,j,k] <- i*j*k
}
}
}
Z
Z <- array(1:600,dim = c(20,30,10))
a <- matrix(c(1:30),30)
Z <- array(1:600,dim = c(20,30,10))
Z <- array(numeric(600),dim = c(30,20))
Z <- array(numeric(600),dim = c(30,20))
Z <- array(numeric(600),dim = c(30,20,10))
Z <- array(numeric(600),dim = c(20,30,10))
for (i in 1:20) {
for (j in 1:30) {
for (k in 1:10) {
Z[i,j,k] <- i*j*k
}
}
}
class(Z)
#####2####
rm(list = ls())
a <- c(4, -10, 7, -2, 8, -6, 1, -15, 3, -9)
i <-  3
j <-  5
b <-  c ( 1 , 5 , 7 )
c <-  c(TRUE, TRUE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE)
a[]
a[i,j]
a[i]
a[i,j]
a[i;j]
seq(3,2)
seq(,2)
a[seq(i,i,2)]
seq(i,i,2)
seq(3,3,2)
seq(3,2)
a[seq(i,j,2)]
a[i:length(a)]
a[c(1, 5, 7)]
a[b]
a[c]
a[a==-4]
a[a==4]
a[a==-4]
mi_matriz <- matrix(1:25,5,5,byrow = TRUE)
View(mi_matriz)
mi_matriz[3, 2]
dim(mi_matriz[3, 2])
mi_matriz[3,]
mi_matriz[, 2]
mi_matriz[seq(1, 5, 2),]
mi_matriz[,seq(2, 5, 2)]
mi_matriz[seq(1, 5, 2), seq(1, 5, 2)]
mi_matriz[10]
mi_matriz[b]
#a
rm(list = ls())
b <- matrix(1:6)
View(b)
x <- as.numeric(readline("Cuantos valores quiere en sus matrices"))
i <- as.numeric(readline("Cuantas filas quiere en sus primera matriz? "))
i <- as.numeric(readline("Cuantas filas quiere en sus primera matriz? "))
a <- matrix(1:x)
x <- as.numeric(readline("Cuantos valores quiere en sus matrices"))
a <- matrix(1:x)
b <- matrix(1:x)
prod(a,b)
a <- matrix(1:x,nrow = i,ncol = j)
a <- matrix(1:x,nrow = "i",ncol = "j")
b <- matrix(1:x,nrow = "u",ncol = "v")
a[]*b[]
a%*%b
a%*%b
View(a)
View(b)
b <- matrix(1:x,byrow = TRUE)
a%*%b
a <- matrix(1:x)
b <- matrix(1:x,1,x)
a%*%b
a[]*b[]
a[]*b[,]
a[50,1]*b[1,50]
a[50,1]*b[50,1]
a%*%b
a[]*b[,]
a[,50]*b[,]
a<-as.integer(1)
rm(list = ls())
a<-as.integer(1)
b<-as.integer(2)
a/b
class(a/b)
a*b
class(a*b)
a <- as.double(1)
b <- as.double(3)
a/b
class(a/b)
a <- as.single(1)
b <- as.single(3)
a/b
class(a/b)
a <- as.integer(2)
b <- 3.14159
is.integer(a)
is.integer(b)
is.numeric(a)
is.numeric(b)
is.double(a)
is.double(b)
#Interpretar el resultado de la siguiente operacion:
a <- as.integer(3)
b <- as.integer(3.14159)
a*b
#Ejercicio 3----
#Determinar el resultado de las siguientes operaciones,
#dado a un número real y b un número entero:
rm(list = ls())
a <-0.85
b <-round(a)
#El resultado deberia ser 1 ya que esta funcion redondea para arriba si
#los decimales son mayores o iguales a 0.5
b <-ceiling(a)
a <-0.85
#El resultado deberia ser 1, esta funcion redondea para arriba sin importar los
#deciamles
b <-floor(a)
#El resultado deberia ser 1 ya que esta funcion redondea para arriba si
#los decimales son mayores o iguales a 0.5
b <-ceiling(a)
#El resultado deberia ser 0, esta funcion redondea para abajo sin importar los
#decimales
b <-trunc(a)
a <-1.85
#El resultado deberia ser 0, esta funcion redondea para abajo sin importar los
#decimales
b <-trunc(a)
a <-2.85
#El resultado deberia ser 0, esta funcion redondea para abajo sin importar los
#decimales
b <-trunc(a)
a <--1.85
#El resultado deberia ser 0, esta funcion redondea para abajo sin importar los
#decimales
b <-trunc(a)
a <-0.85
#El resultado deberia ser 0, esta funcion redondea para abajo sin importar los
#decimales
b <-trunc(a)
#Ejercicio 4----
#a) Armar un programa que escriba por pantalla la frase “Hola mundo”.
rm(list = ls())
print("Hola Mundo")
print(paste("Hola","Mundo",sep = " "),quote = F)
print("Hola Mundo")
print(paste("El numero ingresado fue: ",readline("Ingrese un numero")),quote=F)
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
print(paste("El numero ingresado fue: ",readline("Ingrese un numero")),quote=F)
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
print(paste("El numero ingresado fue:",readline("Ingrese un numero")),quote=F)
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-readline("Ingrese un numero")
if(is.numeric(numero)){
print(paste("El numero ingresado fue:",numero),quote=F)
}else{
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(is.numeric(numero)){
print(paste("El numero ingresado fue:",numero),quote=F)
}else{
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}
}
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-as.numeric(readline("Ingrese un numero"))
if(is.numeric(numero)){
print(paste("El numero ingresado fue:",numero),quote=F)
}else{
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(is.numeric(numero)){
print(paste("El numero ingresado fue:",numero),quote=F)
}else{
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}
}
is.numeric(numero)
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-as.numeric(readline("Ingrese un numero"))
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-readline("Ingrese un numero")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(is.numeric(numero)){
print(paste("El numero ingresado fue:",numero),quote=F)
}else{
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-readline("Ingrese un numero")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-readline("Ingrese un numero")
is.numeric(numero)
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
#b) Armar un programa que pida ingresar un numero y
#que luego imprima por pantalla el número ingresado.
numero <-readline("Ingrese un numero")
if(is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
if(!is.numeric(numero)){
numero<-readline("No ingreso un numero, por favor ingrese devuelta un numero:")
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
}else{
print(paste("El numero ingresado fue:",numero),quote=F)
}
is.numeric(numero)
print(paste("El numero ingresado fue:",numero),quote=F)
nombre<-"gaston luna"
nombre[]
nombre[1]
getwd()
setwd("~/Practica1")
getwd()
#Ejercicio 4----
#a) Armar un programa que escriba por pantalla la frase “Hola mundo”.
rm(list = ls())
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
a=1; b=2; c=3; d=-3;e=4; f=-4; g=4
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
(a+b)/(c+d) + e^2
((a+b)/(c+d)) + e^2
a+b/c+d + e^2
(a+b)/c+d + e^2
(a+b)/(c+d) + e^2
i<-(a+b)/(c+d) + e^2
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
a=1; b=2; c=3; d=-3;e=4; f=-4; g=4
i<-(a+b)/(c+d) + e^2
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
ii<-(a+b)/(c+(d/(e+f)))
i<-(a+b)/(c+d) + e^2
a=1; b=2; c=3; d=-3;e=4; f=-4; g=4
ii<-(a+b)/(c+(d/(e+f)))
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
(1/(c+d)^2)
1/64
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
iii<-(((a+1)^2)-(1/(c+d)^2))/((f+g)^4)
a=1; b=2; c=3; d=-3;e=4; f=-4; g=4
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
i<-(a+b)/(c+d) + e^2
ii<-(a+b)/(c+(d/(e+f)))
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
i<-(a+b)/(c+d) + e^2
ii<-(a+b)/(c+(d/(e+f)))
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
3*a^2
iv<-((3*a^2)-2*a)/(7*b^3+4*b^2-2)
a=1; b=2; c=3; d=-3;e=4; f=-4; g=4
iv<-((3*a^2)-2*a)/(7*b^3+4*b^2-2)
i<-(a+b)/(c+d) + e^2
ii<-(a+b)/(c+(d/(e+f)))
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
iv<-((3*a^2)-2*a)/(7*b^3+4*b^2-2)
a=1; b=2; c=3; d=5; e=2; f=-4; g=1/3
i<-(a+b)/(c+d) + e^2
ii<-(a+b)/(c+(d/(e+f)))
iii<-(((a+1)^2)-(1/(c+d)^2))/(f+g)^4
iv<-((3*a^2)-2*a)/(7*b^3+4*b^2-2)
#b) Evaluar las siguientes expresiones escritas en lenguaje R,
#siendo a, b y c tres numeros reales:
a/b/c
1/6
#b) Evaluar las siguientes expresiones escritas en lenguaje R,
#siendo a, b y c tres numeros reales:
a/b/c
a/(b/c)
(a/b)/c
a + b * a -c
(a+b)*(a-c)
(a+b)*a-c
(-a)^b
# Programa para calcular la inversa de un numero
rm(list=ls())
a <- readline("Ingrese un numero")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
# Programa para calcular la inversa de un numero
rm(list=ls())
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/x)
inversa_x
#Editar el archivo, en la linea correspondiente al calculo de la inversa cambiar x por X.
#¿Como reacciona R al intentar ejecutar el programa y por que?
a <- readline("Ingrese un numero ")
x<- as.numeric(a)
inversa_x <- (1/X)
inversa_x
#d)Deshacer el cambio anterior y modificar el nombre de la sentencia
#“readline” por el de “readlin”. Intentar ejecutar el script.
a <- readlin("Ingrese un numero ")
